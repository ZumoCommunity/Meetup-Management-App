{{<layout}}
{{$content}}

<div class="container-fluid">
    <h1>MeetupS entity</h1>
</div>

<div class="container-fluid topBar">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 btn-group" role="group" aria-label="save meetup buttons">
            <button type="button" class="btn btn-success" data-bind="click: entity.saveItem, enable: entity.Validation.isFormValid">Save</button>
            <a href="/meetups/list" class="btn btn-default" data-bind="click: entity.redirectToList">Cancel</a>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">

            <div class="form-group" data-bind="css: { 'has-error': !entity.Validation.isTitleValid() }">
                <label for="meetupTitle">Meetup Title</label>
                <input type="text" class="form-control" id="meetupTitle" placeholder="Title" data-bind="textInput: entity.model.Title">
            </div>

            <div class="form-group" data-bind="css: { 'has-error': !entity.Validation.isUriValid() }">
                <label for="meetupURI">Meetup URI</label>
                <input type="text" class="form-control" id="meetupURI" placeholder="URI" data-bind="textInput: entity.model.Uri">
                <!-- <label for="MeetupId">Meetup Id</label> -->
            </div>

            <div class="form-group col-xs-12 col-md-6">
                <label for="meetupDateTimeBegin">Meetup Date/Time begin</label>
                <div class="input-group date">
                    <input id="meetupDateTimeBegin" type='datetime' class="form-control" data-bind="datetimepicker: entity.model.DateTimeBegin" />
                </div>
            </div>

            <div class="form-group col-xs-12 col-md-6">
                <label for="meetupDateTimeEnd">Meetup Date/Time end</label>
                <div class='input-group date'>
                    <input id="meetupDateTimeEnd" type='datetime' class="form-control" data-bind="datetimepicker: entity.model.DateTimeEnd" />
                </div>
            </div>

            <div class="form-group">
                <label for="meetupOwnershipType">Meetup Ownership Type</label>
                <select class="form-control" id="meetupOwnershipType" data-bind="value: entity.model.MeetupOwnershipType">
                    <option value="1">Own</option>
                    <option value="2">Third-party</option>
                </select>
            </div>

            <div class="form-group">
                <label for="meetupLocation">Meetup Location</label>
                <select class="form-control" id="meetupLocation" data-bind="value: entity.model.LocationId, foreach: { data: lists.locations }">
                    <option data-bind="text: $data.Title, value: $data.Id"></option>
                </select>
            </div>

            <div class="form-group">
                <label for="attendanceFee">Attendance Fee</label>
                <input type="text" class="form-control" id="attendanceFee" placeholder="0" data-bind="textInput: entity.model.AttendanceFee">
                <label for="AttendanceFeeCurency">Attendance Fee Curency</label>
                <input type="text" class="form-control" id="AttendanceFeeCurency" placeholder="UAH" data-bind="textInput: entity.model.AttendanceFeeCurency">
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
    var viewModel = {
    };

    viewModel = addMeetupEntityBehavior(viewModel, 'Meetups', 'Meetup');

    viewModel.entity.loadItem()
            .then(function(){
                var options = {
                };
                flatpickr('#meetupDateTimeBegin', options);
                flatpickr('#meetupDateTimeEnd', options);

                ko.applyBindings(viewModel);
            });

    ko.bindingHandlers.datetimepicker = {
        init: function(element, valueAccessor, allBindingsAccessor) {
            var options = $.extend({
                        utc: true,
                        altInput: true,
                        altFormat: "F j, Y h:i K",
                        dateFormat: 'Y-m-dTH:iZ',
                        enableTime: true
                    }, allBindingsAccessor().datetimepickerOptions),
                    $el = $(element),
                    picker = new Flatpickr(element, options),
                    observable = valueAccessor();

            //handle field change by registering datepicker's changeDate event
            ko.utils.registerEventHandler(element, "change", function() {
                var d = new Date($el.val());
                d = picker.parseDate(d);
                observable(d);
            });

            //handle disposal
            ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
                $el.flatpickr("destroy");
            });

            observable.subscribe(function(newVal) {
                $el.val(picker.formatDate(options.dateFormat, newVal));
            });

            picker.setDate(ko.unwrap(observable));
        }
    };
</script>


{{/content}}
{{/layout}}